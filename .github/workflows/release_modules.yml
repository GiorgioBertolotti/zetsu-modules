name: Compress and release module

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Fetch all history for all tags and branches
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --tags --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.8
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.8
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
  minify:
    name: Minify modules and create release
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1.0.0
        with:
          path: version1.txt
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
          architecture: "x64"
      - name: Minify mangaworld.cc
        run: python -c 'import json, sys;json.dump(json.load(sys.stdin), sys.stdout)' < mangaworld.cc/MangaWorld-cc.json > mangaworld.cc/MangaWorld-cc.txt
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "mangaworld.cc/MangaWorld-cc.txt"
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}
