{
  "moduleName": "mangaworld.cc",
  "moduleInitials": "MW.CC",
  "moduleDesc": "Module to read from mangaworld.cc",
  "developer": "Giorgio Bertolotti",
  "moduleID": "199809071",
  "moduleImage": "https://www.mangaworld.cc/public/assets/images/MangaWorldSquareLogo.png",
  "moduleVersion": "1.0",
  "moduleLenguage": "IT",
  "moduleHasImages": "true",
  "outputType": "image",
  "randomizeUserAgent": "false",
  "baseURL": "https://www.mangaworld.cc/",
  "blackListed": [""],
  "mainPage": [
    {
      "request": "https://www.mangaworld.cc/",
      "method": "get",
      "headers": [{ "key": "", "value": "" }],
      "extraInfo": [{ "value": "" }],
      "loadJavascript": "false",
      "javaScript": "function Header(key, value) { this.key = key; this.value = value;}function ExtraInfo(value) { this.value = value;}function Output(sectionName, mangasArray) { this.sectionName = sectionName; this.mangasArray = mangasArray;}function MangasArray(moduleID, image, link, title) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title;}function MainPageObject( request, headers, method, extraInfo, loadJavascript, javaScript, output) { this.request = request; this.headers = headers; this.method = method; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output;}const savedData = document.getElementById('katsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML);const moduleID = '199809071';const headers = [new Header('', '')];const extraInfo = [new ExtraInfo('')];let output = [];let sectionName = '';let nextRequest = '';sectionName = document.querySelector( 'body > div.container > div > div.col-sm-12.col-md-4.col-xl-3 > div:nth-child(4) > div > div.s-title > h3').innerText;let mangasArray = [];let mangas = document .querySelector('body > div.container > div > div.col-sm-12.col-md-4.col-xl-3 > div:nth-child(4) > div > div.top-wrapper') .querySelectorAll('.entry');for (let x = 0; x < mangas.length; x++) { const manga = mangas[x]; const link = manga.querySelector('.long > .content > .d-flex.justify-content-between > a').href; const image = manga.querySelector('.long > .content > .d-flex.flex-wrap.flex-row > .img-wrapper > a > .thumb > img').getAttribute('src'); const title = manga.querySelector('.long > .content > .d-flex.justify-content-between > a').title; const mangaObject = new MangasArray(moduleID, image, link, title); mangasArray.push(mangaObject);}output.push(new Output(sectionName, mangasArray));sectionName = document.querySelector( 'body > .container > div > .col-sm-12.col-md-8.col-xl-9 > .s-title > h3').innerText;mangasArray = [];mangas = document .querySelector( 'body > .container > div > .col-sm-12.col-md-8.col-xl-9 > .comics-grid' ) .querySelectorAll('.entry');for (let x = 0; x < mangas.length; x++) { const manga = mangas[x]; const link = manga.querySelector('a').href; const image = manga.querySelector('a > img').getAttribute('src'); const title = manga.querySelector('div > p.name > a.manga-title').title; const mangaObject = new MangasArray(moduleID, image, link, title); mangasArray.push(mangaObject);}output.push(new Output(sectionName, mangasArray));const mainPageObject = new MainPageObject( nextRequest, headers, '', extraInfo, '', '', output);const finalJson = JSON.stringify(mainPageObject);savedData.innerHTML = finalJson;",
      "output": [
        {
          "sectionName": "",
          "mangasArray": [
            { "moduleID": "", "image": "", "link": "", "title": "" }
          ]
        }
      ]
    }
  ],
  "search": [
    {
      "request": "",
      "method": "get",
      "headers": [{ "key": "", "value": "" }],
      "separator": "+",
      "extraInfo": [{ "value": "" }],
      "loadJavascript": "false",
      "javaScript": "",
      "output": [
        {
          "moduleID": "0",
          "image": "",
          "link": "",
          "title": "",
          "type": "",
          "voice": "",
          "stars": ""
        }
      ]
    }
  ],
  "info": [
    {
      "request": "get",
      "method": "get",
      "headers": [{ "key": "", "value": "" }],
      "extraInfo": [{ "value": "" }],
      "loadJavascript": "false",
      "javaScript": "function Header(key, value) { this.key = key; this.value = value;}function ExtraInfo(value) { this.value = value;}function Output( moduleID, image, link, title, description, genres, type, status, chapters) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.description = description; this.genres = genres; this.type = type; this.status = status; this.chapters = chapters;}function Chapters(link, moduleID) { this.link = link; this.moduleID = moduleID;}function InfoObject( request, method, headers, extraInfo, loadJavascript, javaScript, output) { this.request = request; this.method = method; this.headers = headers; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output;}const savedData = document.getElementById('katsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML);const moduleID = '199809071';const headers = [new Header('', '')];const extraInfo = [new ExtraInfo('')];const chapters = [];let type = '';let status = '';let genres = [];let desc = '';let image = '';let title = '';image = document.querySelector('img.rounded').getAttribute('src');type = document.querySelector( '.info > div.meta-data.row > div:nth-child(5) > a').innerText;title = document.querySelector('.info > h1').innerText;status = document.querySelector( '.info > div.meta-data.row.px-1 > div:nth-child(6) > a').innerText;var linkData = document.head .querySelector('meta[property=\"og:url\"]') .getAttribute('content');const genresBadges = document .querySelector('.info > div.meta-data.row.px-1 > div:nth-child(2)') .querySelectorAll('a');for (let x = 0; x < genresBadges.length; x++) { const genreBadge = genresBadges[x]; genres.push(genreBadge.innerText);}const desc = document.querySelector('#noidungm').innerHTML;const chaptersArray = document.querySelectorAll('.chapter');for (const x = 0; x < chaptersArray.length; x++) { const chapter = chaptersArray[x]; const link = chapter.querySelector('a').href; chapters.push(new Chapters(link, moduleID));}chapters.reverse();const output = new Output( moduleID, image, linkData, title, desc, genres, type, status, chapters);const infoObject = new InfoObject( '', 'get', headers, extraInfo, '', '', output);const finalJson = JSON.stringify(infoObject);savedData.innerHTML = finalJson;",
      "output": {
        "moduleID": "0",
        "image": "",
        "link": "",
        "title": "",
        "description": "",
        "genres": [""],
        "type": "",
        "status": "",
        "chapters": [{ "link": "", "moduleID": "" }]
      }
    }
  ],
  "chapters": [
    {
      "request": "",
      "method": "get",
      "headers": [{ "key": "key", "value": "value" }],
      "extraInfo": [{ "value": "" }],
      "loadJavascript": "false",
      "javaScript": "",
      "output": [
        {
          "link": "",
          "moduleID": "",
          "headers": [{ "key": "key", "value": "value" }]
        }
      ]
    }
  ]
}
